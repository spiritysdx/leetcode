func hammingWeight(num uint32) (ones int) { 
    // 定义一个函数 `hammingWeight`，输入是一个无符号32位整数 `num`，
    // 输出是整数 `ones`，表示二进制表示中1的个数。
    for i := 0; i < 32; i++ { 
        // 遍历从 0 到 31 共 32 位，因为无符号32位整数有32位二进制。
        if 1<<i&num > 0 { 
            // 使用位运算检查 `num` 的第 `i` 位是否是1。
            // `1<<i` 表示将数字1左移i位，即对应位置的掩码。
            // `1<<i & num` 表示将 `num` 与掩码按位与运算。
            // 如果结果大于0，说明该位是1。
            ones++ 
            // 如果当前位是1，将计数器 `ones` 加1。
        }
    }
    return
    // 返回统计的1的个数。
}
